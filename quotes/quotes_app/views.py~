from django.contrib.auth.mixins import LoginRequiredMixin
from django.shortcuts import render
from .utils import get_mongodb_client
from django.urls import reverse, reverse_lazy
from .models import Quote
from .forms import QuoteForm
from django.core.paginator import Paginator, EmptyPage, PageNotAnInteger
from django.views.generic import (
    ListView,
    DetailView,
    CreateView,
    UpdateView,
    DeleteView,
)

# Create your views here.

from bson import ObjectId


def main(request, page=1):
    db = get_mongodb_client()
    quotes = list(db.quotes.find())  # Конвертируем курсор в список

    per_page = 10
    paginator = Paginator(quotes, per_page)

    try:
        quotes_on_page = paginator.page(page)
    except PageNotAnInteger:
        quotes_on_page = paginator.page(1)
    except EmptyPage:
        quotes_on_page = paginator.page(paginator.num_pages)

    return render(request, 'quotes_app/index.html', {
        'quotes': quotes_on_page,
        'paginator': paginator,
        'current_page': int(page)
    })


class IndexView(ListView):
    template_name = "quotes_app/index.html"
    context_object_name = "quotes"
    model = Quote


class QuoteCreateView(LoginRequiredMixin, CreateView):
    model = Quote
    template_name = "quotes_app/create.html"
    form_class = QuoteForm
    success_url = reverse_lazy('index')

    def get_queryset(self):
        queryset = super(IndexView, self).get_queryset()
        print(queryset)
        return queryset


class EditView(LoginRequiredMixin, UpdateView):
    model = Quote
    template_name = "quotes_app/edit.html"
    fields = ["quote", "author"]
    success_url = reverse_lazy('index')


class QuoteDeleteView(LoginRequiredMixin, DeleteView):
    model = Quote
    template_name = "quotes_app/delete.html"
    context_object_name = "quote"
    success_url = reverse_lazy('index')
